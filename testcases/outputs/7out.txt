#include<stdio.h>
#include<conio.h>




int main ( ) 
{
	int i , tabs , j , k , l ; 
	freopen ( "ain.txt" , "r" , stdin ) ; 
	freopen ( "ainn.txt" , "w" , stdout ) ; 
	while ( ( ch = getchar ( ) ) != EOF ) 
	{
		prev : if ( op ( ch ) ) 
		{
			n = 0 ; 
			now [ n ] = '\0' ; 
			now [ n ++ ] = ch ; 
			now [ n ] = '\0' ; 
			store [ si ++ ] = ' ' ; 
			store [ si ++ ] = ch ; 
			if ( isoone ( ch ) ) 
			{
				store [ si ++ ] = ' ' ; 
				n = 0 ; 
				now [ n ] = '\0' ; 
				continue ; 
			}
			else if ( isnone ( ch ) ) 
			{
				ch = getchar ( ) ; 
				now [ n ++ ] = ch ; 
				now [ n ] = '\0' ; 
				if ( isotwo ( now ) ) 
				{
					store [ si ++ ] = ch ; 
					store [ si ++ ] = ' ' ; 
					if ( strcmp ( now , "//" ) == 0 ) 
					{
						while ( ch != '\n' ) 
						{
							ch = getchar ( ) ; 
							store [ si ++ ] = ch ; 
						}
						store [ si ++ ] = ch ; 
					}
					n = 0 ; 
					now [ n ] = '\0' ; 
					continue ; 
				}
				else if ( isntwo ( now ) ) 
				{
					store [ si ++ ] = ch ; 
					ch = getchar ( ) ; 
					now [ n ++ ] = ch ; 
					now [ n ] = '\0' ; 
					if ( isthree ( now ) ) 
					{
						store [ si ++ ] = ch ; 
						store [ si ++ ] = ' ' ; 
						n = 0 ; 
						now [ n ] = '\0' ; 
						continue ; 
					}
					else 
					{
						store [ si ++ ] = ' ' ; 
						n = 0 ; 
						now [ n ] = '\0' ; 
						goto prev ; 
					}
				}
				else 
				{
					store [ si ++ ] = ' ' ; 
					n = 0 ; 
					now [ n ] = '\0' ; 
					goto prev ; 
				}
			}
		}
		else if ( ( ch == ',' ) || ( ch == ';' ) ) 
		{
			n = 0 ; 
			now [ n ] = '\0' ; 
			store [ si ++ ] = ch ; 
			store [ si ++ ] = ' ' ; 
			continue ; 
		}
		else if ( ch == 'k' ) 
		{
			n = 0 ; 
			now [ n ] = '\0' ; 
			store [ si ++ ] = ' ' ; 
			store [ si ++ ] = ch ; 
			continue ; 
		}
		else if ( ( ( ch >= 'a' ) && ( ch <= 'z' ) ) || ( ch == '#' ) || ( ch == '_' ) ) 
		{
			now [ n ++ ] = ch ; 
			now [ n ] = '\0' ; 
		}
		else if ( ch == 'k' ) 
		{
			store [ si ++ ] = ch ; 
			while ( ( ch = getchar ( ) ) != 'k' ) 
				store [ si ++ ] = ch ; 
			n = 0 ; 
			now [ n ] = '\0' ; 
		}
		else if ( ch == 'k' ) 
		{
			store [ si ++ ] = ch ; 
			while ( ( ch = getchar ( ) ) != 'k' ) 
				store [ si ++ ] = ch ; 
			n = 0 ; 
			now [ n ] = '\0' ; 
		}
		else if ( ( ch == ' ' ) || ( ch == '\t' ) || ( ch == '\n' ) ) 
		{
			if ( resfound ( ) ) 
			{
				store [ si ++ ] = ' ' ; 
				n = 0 ; 
				now [ n ] = '\0' ; 
			}
			else if ( ( store [ si - 1 ] != ' ' ) && ( ch == ' ' ) ) 
			{
				store [ si ++ ] = ' ' ; 
			}
			continue ; 
		}
		else 
			n = 0 ; 
		store [ si ++ ] = ch ; 
	}
	p = store ; 
	tabs = 0 ; 
	for ( i = 0 ; i < si ; i ++ ) 
	{
		printf ( "%c" , store [ i ] ) ; 
	}
	return 0 ; 
}
